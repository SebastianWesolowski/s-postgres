{
  "name": "placeholder-repo-name",
  "version": "0.0.0-development",
  "description": "{{A template for creating ...}}",
  "main": "./lib/index.js",
  "files": [
    "lib/**/*",
    "CHANGELOG.md"
  ],
  "bin": {
    "s-postgres": "./lib/index.js"
  },
  "scripts": {
    "ℹ️ info:Development": "ℹ️",
    "dev": "cross-env SDEBUG=true tsx watch ./src/index.ts",
    "dev:tunnel": "run-p ngrok:auth dev ngrok",
    "ℹ️ info:Production": "ℹ️",
    "build:prebuild": "run-s build:clean",
    "build": "run-s build:prebuild build:rollup",
    "build:rollup": "npx rollup -c rollup.config.mjs",
    "build:rollup:build": "npx rollup -c rollup.config.build.mjs",
    "build:prod": "run-s build:prebuild build:rollup:build",
    "build:package": "[ -d ./dist ] || mkdir ./dist && npm pack --pack-destination ./dist &&  tar -xvzf \"$(ls -t ./dist/*.tgz | head -n 1)\" -C ./dist/",
    "build:clean": "rimraf ./lib/",
    "build:package:preparePackage": "npm pack --pack-destination ./dist",
    "build:package:addModuleType": "node ./tools/addModuleType.js",
    "build:package:prepareRealProject": "PACKAGE_SOURCE=\"$(ls -t ./dist/*.tgz | head -n 1)\" node ./tools/addDependency.js && cd ./test/realProject && yarn install && yarn test",
    "build:package:archivePackage": "rm -rf ./dist/package && [ -d ./dist/package ] || mkdir ./dist/package && tar -xvzf \"$(ls -t ./dist/*.tgz | head -n 1)\" -C ./dist",
    "ℹ️ info:Testing": "ℹ️",
    "test": "run-s test:unit test:snapshot",
    "test:dev": "node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand --passWithNoTests --updateSnapshot",
    "test:unit": "node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand --passWithNoTests",
    "test:snapshot": "cross-env TEST_WITH_SNAPSHOTS=true node --experimental-vm-modules node_modules/jest/bin/jest.js --silent --passWithNoTests --updateSnapshot",
    "test:unit:watch": "node --experimental-vm-modules node_modules/jest/bin/jest.js --watch --passWithNoTests",
    "ℹ️ info:Linting": "ℹ️",
    "lint": "cross-env sh -c '(run-s lint:check 2>/dev/null) || (run-s lint:fix lint:check)'",
    "lint:check": "run-p lint:typescript:check lint:prettier:check lint:eslint:check",
    "lint:fix": "run-p lint:prettier:fix lint:eslint:fix",
    "lint:prettier:check": "prettier --check --cache './src/**/*.{js,ts,md,json}'",
    "lint:prettier:fix": "prettier --write --cache './src/**/*.{js,ts,md,json}'",
    "lint:eslint:check": "eslint --no-error-on-unmatched-pattern --cache --cache-strategy content --cache-location .eslintcache/ './src/**/*.+(js|ts)' --max-warnings 0 --config eslint.config.mjs",
    "lint:eslint:check:strict": "eslint --no-error-on-unmatched-pattern --cache --cache-strategy content --cache-location .eslintcache/ './src/**/*.+(js|ts)' --max-warnings 0 --config eslint.config.strict.mjs",
    "lint:eslint:fix": "eslint --no-error-on-unmatched-pattern --cache --cache-strategy content --cache-location .eslintcache/ './src/**/*.+(js|ts)' --fix --config eslint.config.strict.mjs",
    "lint:typescript:check": "tsc --noEmit --project ./tsconfig.json",
    "ℹ️ info:Quality": "ℹ️",
    "quality:coverage": "yarn test:unit --coverage --coverageDirectory=./reports/coverage",
    "quality:report": "//TODO echo 'preparing report...'",
    "quality:coupling:graph": "yarn mkdir:reports && npx madge ./src --extensions js,ts,md --basedir ./src --exclude 'reset.d.ts|prettier.config.js|README.md|.eslintrc.js' --image reports/coupling.svg --image reports/coupling.png",
    "quality:coupling:json": "yarn mkdir:reports && npx madge ./src --extensions js,ts,md --basedir ./src --json --exclude 'reset.d.ts|prettier.config.js|README.md|.eslintrc.js' > reports/coupling.json",
    "ℹ️ info:Git": "ℹ️",
    "husky:commit-msg": "commitlint --edit ${HUSKY_GIT_PARAMS:-$1}",
    "husky:pre-commit": "lint-staged -c ./.husky/lint-staged.config.json",
    "husky:pre-push": "run-p lint:check",
    "husky:prepare-commit-msg": "exec < /dev/tty && yarn commit --hook || true",
    "commit": "czg",
    "prepare": "husky",
    "ℹ️ info:Release": "ℹ️",
    "release": "semantic-release --debug",
    "release:dry": "cross-env SKIP_TRANSFORM=true semantic-release --debug --dry-run",
    "ℹ️ info:Tools": "ℹ️",
    "mkdir:reports": "mkdir -p reports",
    "ngrok": "ngrok http 3000",
    "ngrok:auth": "node tools/ngrok-auth.js",
    "customize": "tsx tools/customize/customize.ts",
    "customize:clean": "echo TODO [SC-148]",
    "prepack": "clean-package",
    "postpack": "clean-package restore",
    "update-template": "s-update --remoteRepository='https://github.com/SebastianWesolowski/s-template/tree/dev/templates/startetNpmPackage/node'",
    "update-template:build": "s-build --remoteRepository='https://github.com/SebastianWesolowski/s-template/tree/dev/templates/startetNpmPackage/node'"
  },
  "dependencies": {
    "exec-sh": "^0.4.0",
    "npm-run-all": "^4.1.5",
    "rimraf": "^6.0.1",
    "typescript": "^5.7.3"
  },
  "devDependencies": {
    "@babel/core": "^7.23.3",
    "@commitlint/cli": "^19.7.1",
    "@commitlint/config-conventional": "^19.7.1",
    "@ef-carbon/tspm": "^2.2.5",
    "@eslint/eslintrc": "^3",
    "@jest/globals": "^29.7.0",
    "@rollup/plugin-babel": "^6.0.4",
    "@rollup/plugin-commonjs": "^25.0.7",
    "@rollup/plugin-json": "^6.1.0",
    "@rollup/plugin-node-resolve": "^15.2.3",
    "@rollup/plugin-typescript": "^11.1.6",
    "@ryansonshine/commitizen": "^4.2.8",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/commit-analyzer": "^13.0.1",
    "@semantic-release/exec": "^7.0.3",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^11.0.1",
    "@semantic-release/npm": "^12.0.1",
    "@semantic-release/release-notes-generator": "^14.0.3",
    "@testing-library/jest-dom": "^6.1.4",
    "@total-typescript/ts-reset": "^0.5.1",
    "@trivago/prettier-plugin-sort-imports": "^5.2.2",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.13.1",
    "@types/sharp": "^0.32.0",
    "@typescript-eslint/eslint-plugin": "8.21.0",
    "@typescript-eslint/parser": "^5.54.1",
    "all-contributors-cli": "^6.26.1",
    "clean-package": "^2.2.0",
    "commitizen": "^4.3.1",
    "concurrently": "^9.1.2",
    "conventional-changelog-conventionalcommits": "^8.0.0",
    "cross-env": "^7.0.3",
    "czg": "^1.11.0",
    "dotenv": "^16.4.5",
    "dotenv-cli": "^7.3.0",
    "eslint": "^9",
    "eslint-config-prettier": "^10.0.1",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^3.4.0",
    "eslint-plugin-security": "^3.0.1",
    "eslint-plugin-unused-imports": "^4.1.4",
    "fs-extra": "^11.2.0",
    "git-cz": "^4.9.0",
    "glob": "^10.3.10",
    "globby": "^11.1.0",
    "handlebars-helpers": "^0.10.0",
    "husky": "^9.0.0",
    "jest": "^29.7.0",
    "lint-staged": "^13.2.1",
    "madge": "^8.0.0",
    "mkdirp": "^3.0.1",
    "ngrok": "^5.0.0-beta.2",
    "patch-package": "^8.0.0",
    "postinstall-postinstall": "^2.1.0",
    "prettier": "^3.5.0",
    "replace-in-file": "^7.1.0",
    "rollup": "^4.13.0",
    "rollup-plugin-copy": "^3.5.0",
    "rollup-plugin-replace": "^2.2.0",
    "rollup-plugin-typescript2": "^0.36.0",
    "s-prettier": "^1.1.0",
    "s-update-manager": "^1.0.0-dev.48",
    "semantic-release": "^24.2.2",
    "string-width": "^7.2.0",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.2.1",
    "ts-node-dev": "^2.0.0",
    "tsconfig-paths": "^4.2.0",
    "tsx": "^4.19.2",
    "typescript-eslint": "^8.21.0",
    "wait-on": "^8.0.2"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/{{PLACEHOLDER_GITHUB_USER}}/{{PLACEHOLDER_REPO_NAME}}.git"
  },
  "license": "MIT",
  "author": {
    "name": "{{PLACEHOLDER_FULL_NAME}}",
    "email": "{{PLACEHOLDER_GITHUB_USER}}@users.noreply.github.com",
    "url": "https://github.com/{{PLACEHOLDER_GITHUB_USER}}"
  },
  "engines": {
    "node": ">=0.0.0"
  },
  "bugs": {
    "url": "https://github.com/{{PLACEHOLDER_GITHUB_USER}}/{{PLACEHOLDER_REPO_NAME}}/issues"
  },
  "homepage": "https://github.com/{{PLACEHOLDER_GITHUB_USER}}/{{PLACEHOLDER_REPO_NAME}}#readme",
  "config": {
    "commitizen": {
      "path": "node_modules/cz-git"
    },
    "issueTag": "SC"
  }
}
